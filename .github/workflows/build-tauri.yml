name: Build Tauri App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      # 1️⃣ Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: pwsh

      # 3️⃣ Setup Rust
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable

      # 4️⃣ Download sidecar from .NET sidecars release
      - name: Download sidecar
        run: |
          mkdir -p src-tauri/bin
          if [ "${{ runner.os }}" == "Windows" ]; then
            powershell -Command "Invoke-WebRequest -Uri 'https://github.com/KaustubhIngale1704/dotnet-sidecar/releases/latest/download/server.exe' -OutFile 'src-tauri/bin/server.exe'"
          else
            curl -L -o src-tauri/bin/server.exe https://github.com/KaustubhIngale1704/dotnet-sidecar/releases/latest/download/server.exe
          fi

      # 5️⃣ Rename/copy to platform-specific filenames
      - name: Prepare sidecars for Tauri
        run: |
          cd src-tauri/bin
          if [ "${{ runner.os }}" == "Windows" ]; then
            copy server.exe server-x86_64-pc-windows-msvc.exe
          elif [ "${{ runner.os }}" == "Linux" ]; then
            cp server.exe server-x86_64-unknown-linux-gnu
          else
            cp server.exe server-x86_64-apple-darwin
          fi

      # 6️⃣ Build Tauri app
      - name: Build Tauri App
        run: npm run tauri build
        working-directory: src-tauri
