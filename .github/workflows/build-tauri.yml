name: 'publish-windows'

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    runs-on: windows-latest
    permissions:
      contents: write
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install
        working-directory: tauri-dotnet-sidecar

      - name: Build frontend
        run: pnpm build
        working-directory: tauri-dotnet-sidecar
        
      - name: Download .NET sidecar
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_TAURI }}
        run: |
          mkdir -p src-tauri/bin
          curl -L -o src-tauri/bin/server.exe https://github.com/your-org/dotnet-sidecar/releases/download/v1.0.0/server.exe

      - name: List downloaded files
        run: ls src-tauri/bin

      - name: Prepare Windows sidecar
        run: |
          Copy-Item "src-tauri/bin/server.exe" "src-tauri/bin/server-x86_64-pc-windows-msvc.exe"

      - name: Delete original server.exe
        shell: pwsh
        run: |
          $original = "src-tauri/bin/server.exe"
          if (Test-Path $original) {
            Remove-Item $original -Force
            Write-Host "Deleted original file: $original"
          } else {
            Write-Host "File not found, nothing to delete: $original"
          }

      - name: List downloaded files 1
        run: ls src-tauri/bin

      - name: Build Tauri app
        shell: bash
        run: pnpm tauri build
        working-directory: src-tauri

      # Zip all files/folders in /bundle/nsis and put in /artifacts/windows-latest/
      - name: Zip assets (Windows)
        shell: pwsh
        if: startsWith(runner.os, 'Windows')
        run: |
          mkdir -p ./artifacts/windows-latest
          Compress-Archive -Path src-tauri/target/release/bundle/nsis/* -DestinationPath ./artifacts/windows-latest/windows-latest-artifacts.zip
