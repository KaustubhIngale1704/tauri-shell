name: 'publish'

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 90

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        run: npm install -g pnpm
        
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install
        working-directory: tauri-dotnet-sidecar

      - name: Download .NET sidecar
        run: |
          mkdir -p tauri-dotnet-sidecar/src-tauri/bin
          curl -L -o tauri-dotnet-sidecar/src-tauri/bin/server.exe \
            https://github.com/KaustubhIngale1704/dotnet-sidecar/releases/latest/download/server.exe

      - name: Prepare platform-specific sidecar
        run: |
          cd tauri-dotnet-sidecar/src-tauri/bin
          if [[ "${{ matrix.platform }}" == *"windows"* ]]; then
            cp server.exe server-x86_64-pc-windows-msvc.exe
          elif [[ "${{ matrix.platform }}" == *"ubuntu"* ]]; then
            cp server.exe server-x86_64-unknown-linux-gnu
          else
            cp server.exe server-x86_64-apple-darwin
          fi

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
